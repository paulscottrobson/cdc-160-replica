// -------------------------------------------------------------------------------------------------
//	@m 		expand into D,I,F,B
//	10-47 	indirect (lower 2 bits is 01) add 1 cycle.
//	01-57 	add $rni() to the end.
// -------------------------------------------------------------------------------------------------

:function inline $eacd() {	
:	$s = ($z & 0x3F);
:}

:function inline $eaci() {	
:	$s = ($z & 0x3F);
:	$read();
:	$s = $z;
:}

:function inline $eacf() {	
:	$s = ($p + ($z & 0x3F)) & 0xFFF;
:}

:function inline $eacb() {	
:	$s = ($p - ($z & 0x3F)) & 0xFFF;
:}

// -------------------------------------------------------------------------------------------------

:function inline $rni() {
:	$p = ($p + 1) & 0xFFF;
:	$read();	
:}

:function inline $jni() {
:	$p = $s;
:	$read();
:}

// -------------------------------------------------------------------------------------------------

:function inline $add12bit() {
:	if ($z = 0xFFF) $z = 0;
:	$a = $a + $z;
:	if ($a & 0x1000) {
:		$a = ($a + 1) & 0xFFF;
:	}
:}

// -------------------------------------------------------------------------------------------------

00		1 		"err %d"	$halt = 1
77		1 		"hlt %d"	$halt = 1	

:function $restart() {
:	$halt = 0;
:	$rni();
:}

// -------------------------------------------------------------------------------------------------

01 		1 		"sha %d"	$shiftRoutine()

:function $shiftRoutine() {
:	$s = $a;$a = 0;
:	$s = (($s << 1) | ($s >> 11)) & 0xFFF;
:	if ($z & 0x02) {
:		$a = $s;
:	}
:	$s = (($s << 1) | ($s >> 11)) & 0xFFF;
:	$s = (($s << 1) | ($s >> 11)) & 0xFFF;
:	if ($z & 0x08) {
:		$z = $s;$add12bit()
:	}
:}

// -------------------------------------------------------------------------------------------------

02 		1 		"lpn %d"	$a = $a & ($z & 0x3F)
10-13	2 		"lp@m %@m"	$eac@m();$read();$a = $a & $z

// -------------------------------------------------------------------------------------------------

03 		1 		"lsn %d"	$a = $a ^ ($z & 0x3F)
14-17	2 		"ls@m %@m"	$read();$a = $a ^ $z

// -------------------------------------------------------------------------------------------------

04 		1 		"ldn %d"	$a = ($z & 0x3F)
20-23	2 		"ld@m %@m"	$eac@m();$read();$a = $z

// -------------------------------------------------------------------------------------------------

05 		1 		"lcn %d"	$a = ($z & 0x3F) ^ 0xFFF
24-27	2 		"lc@m %@m"	$eac@m();$read();$a = $z ^ 0xFFF

// -------------------------------------------------------------------------------------------------

06 		1 		"adn %d"	$z = ($z & 0x3F);$add12bit()
30-33	2 		"ad@m %@m"	$eac@m();$read();$add12bit()

// -------------------------------------------------------------------------------------------------

07 		1 		"sbn %d"	$z = ($z & 0x3F) ^ 0xFFF;$add12bit()
34-37	2 		"sb@m %@m"	$eac@m();$read();$z = $z ^ 0xFFF;$add12bit()

// -------------------------------------------------------------------------------------------------

40-43 	3 		"st@m %@m"	$eac@m();$mbr = $a;$write()

// -------------------------------------------------------------------------------------------------

44-47 	3 		"sr@m %@m"	$eac@m();$read();$z = (($z << 1) | ($z >11)) & 0xFFF;$a = $z;$write()

// -------------------------------------------------------------------------------------------------

50-53	3 		"ra@m %@m"	$eac@m();$read();$add12bit();$z = $a;$write()

// -------------------------------------------------------------------------------------------------

54-57	3 		"ao@m %@m"	$eac@m();$read();$a = 1;$add12bit();$z = $a;$write()

// -------------------------------------------------------------------------------------------------

60,64 	1 		"zj@m %@m"	$eac@m();if ($a == 0) { $jni(); } else { $rni(); }
61,65 	1 		"nz@m %@m"	$eac@m();if ($a != 0) { $jni(); } else { $rni(); }
62,66 	1 		"pj@m %@m"	$eac@m();if (($a & 0x800) == 0) { $jni(); } else { $rni(); }
63,67 	1 		"nj@m %@m"	$eac@m();if (($a & 0x800) != 0) { $jni(); } else { $rni(); }

// -------------------------------------------------------------------------------------------------

70 		2 		"jpi %i"	$eaci();$jni()
71 		2 		"jfi %f"	$eacf();$read();$s = $z;$jni()

// -------------------------------------------------------------------------------------------------
//		I/O Functions. 
//			$iomode = 0 running, R waiting for a word, W writing a word, F sending a function.
//			if $ioOpcode is not zero then execute $ioOpcode not $z only when Data Available/Sent
// -------------------------------------------------------------------------------------------------

:function dataTransfer() {
:	if ($ioMode == 0) {
:		$ioOpcode = $z;									// Save instruction
:		$eacf();										// Add P to E to get starting address
:		$read();$a = $z;								// Read starting address into A.
:		$p = ($p + 1) & 0xFFF 							// Advance P to address of last word
:	
:		if ($ioOpcode == $72) { 						// READ 
:			$ioMode = 'R';								// Switch to waiting for data input.
:		} else {										// WRITE
:			$s = $a;$read();							// Get first word to write.
:			$ioMode = 'W';								// Switch to waiting for output completion.
:		}
:	} else {											// READ available, WRITE complete.
:		if ($ioMode == 'R') {							// Just read a word in
:			$s = $a;$write();							// Write to memory.
:		}
:		$cycles = $cycles + 2;							// 2 cycles per word transferred.
:		$a = ($a + 1) & 0xFFF;							// Advance to the next position to write.
:		$s = $p;$read();								// Read the ending position.
:		if ($z == $a) {									// Completed ?
:			$dataTransferEnd();
:		} else {
:			if ($ioMode == 'W') {						// Not completed, if write get next word
:				$s = $a;$read();
:			}			
:		}
:	}
:}	

:function $dataTransferEnd() {
:	$ioMode = 0;										// Allow us to break out of this 
:	$ioOpcode = 0;										// instruction - also called on error.
:	$rni();												// Read next instruction.
:}

72 		2 		"inp %f"	$dataTransfer()
73 		2 		"out %f"	$dataTransfer()

// -------------------------------------------------------------------------------------------------

74 		1		"otn %d"	$doOTN();
	
:function $doOTN() {
:	if ($ioMode == 0) {
:		$ioOpcode = $z;									// Keep doing OTN 
:		$ioMode = 'W';									// Writing
:		$z = ($z & 0x3F);								// Writing this value.	
:	} else {
:		$dataTransferEnd(); 							// When sent, end the transfer
:	}	
:}
// -------------------------------------------------------------------------------------------------

76 		1 		"ina %c"	$doINA();

:function $doINA() {
:	if ($ioMode == 0) {
:		$ioOpcode = $z;									// Keep doing INA
:		$ioMode = 'R';									// Reading
:	} else {
:		$a = $z;										// Put in A register
:		$dataTransferEnd(); 							// When received end the transfer
:	}		
:}
	
// -------------------------------------------------------------------------------------------------

75 		1 		"exf %f"	$doEXF()

:function $doEXF() {
:	if ($ioMode == 0) {
:		$ioOpcode = $z;									// Keep doing EXF
:		$eacf();										// Where the function command is.
:		$read();										// Read into Z.
:		$ioMode = 'F';									// Sending external function.
:	} else {
:		$dataTransferEnd(); 							// When sent, end the transfer
:	}	
:}

